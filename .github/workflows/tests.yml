name: run-tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: [8.0, 7.3]
        laravel: ['8.0', '9.0']
        stability: [prefer-stable]
        include:
          - laravel: '8.0'
            testbench: ^6.0
            passport: ^10.1
          - laravel: '9.0'
            testbench: ^7.0
            passport: ^10.3

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: avored_ecommerce_test
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
      - name: Install dependencies
        run: |
          composer require "illuminate/auth:${{ matrix.laravel }}" illuminate/contracts:${{ matrix.laravel }}" illuminate/database;${{ matrix.laravel }}" illuminate/routing;${{ matrix.laravel }}" illuminate/http;${{ matrix.laravel }}" illuminate/support;${{ matrix.laravel }}"  illuminate/view:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" "orchestra/testbench:${{ matrix.passport }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction
      - name: Execute tests
        run: vendor/bin/phpunit
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}

      - name: phpunit-coverage-badge
        uses: timkrase/phpunit-coverage-badge@v1.2.0
        with:
          report: build/logs/clover.xml
          coverage_badge_path: "badge-coverage.svg"
          push_badge: true
          repo_token: ${{ secrets.USER_TOKEN }}
